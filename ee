
int sommeEntiers(int a,int b){

	int somme=0;
	for(int i=a;i<=b;i++){
		somme += i;
		
	}
	
	return somme;
	
}

int sommeEntiersCroissant(int a , int b){

	int (a==b){
		return a;
	}
	else{
		return b+ sommeEntiersCroissant( a+1 , b );
		}
	}
	
int sommeEntiersDecroissant(int a , int b){

int (a==b){
	return a;
}
else{
	return a+ sommeEntiersDecroissant( b , a-1 );
		}
	}
  
  
  //
  
  #include <stdio.h>
#define SIZE 20

void recursive(int arr[],int size){

	if(taille==0){
	
		return 1;
	}
	
	else{
		recursive(arr,size-1);
		printf("%d",arr[size-1]);
	}
	}



int find_max(int arr[],int size){

	if(size==1){
	
		return arr[0];
		}
	else{
	int max=find_max(arr,size-1);
	return arr[size-1] >max?arr[size-1]:max;
	
	}
	
int divis_from_end(int arr,int size){

	if(size==0){
		return 0;
		}
		
	if(arr[size-1]%3==0){
		return 1+divis_from_end(arr,taille-1);
		}
	else{
		return divis_from_end(arr,taille-1);
		}
	}

int divis_from_beg(int* arr,int size){

	if(size==0){
		return 0;
		}
	if(*arr%3==0){
	  	return 1+divis_from_beg(arr+1,n-1);
	  }
	  else{
	  	return divis_from_beg(arr+1,n-1);
	  	}
	  	}
				
	

void main(){

	int tab[SIZE];
	srand(time(NULL));
	for(int i=0;i<SIZE;i++){
	
		tab[i]=rand%()25;
		}
	}
  
  
